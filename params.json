{"name":"96px Games","tagline":"Minimalistic Display Games SDK","body":"### Welcome to 96px Games.\r\nThis is the home of the minimalistic Display Games Library. A Game Library to build games which you can play on minimalistic displays. It is optimized for 96px Displays (12x8) but can be used for all kinds of resolutions.\r\nIt uses a simple UDP Protocol to transmit the data to the display but also contains a simulator with which you can test your games.\r\n\r\n### The Library\r\n\r\nThe documentation of the Library can be found here: TBD\r\n\r\n### Dependencies\r\n\r\n* [pygame](http://www.pygame.org/)\r\n* [PyOpenGL](http://pyopengl.sourceforge.net/)\r\n\r\n### Simulator\r\n\r\nSadly the simulator runs only on windows for now.\r\nTo run the simulator simply execute\r\n\r\n```\r\npython simulator/simulator.py\r\n```\r\n\r\n### Example Game\r\n\r\nA simplistic example for a game written with this library would be:\r\n\r\n```python\r\n#!/usr/bin/python\r\n# -*- coding: utf8 -*- \r\n\r\nfrom gamelib.game import *\r\n\r\nclass SampleGame(Game):\r\n\r\n    def __init__(self, ip):\r\n        Game.__init__(self, ip)\r\n\r\n        self.characterPositions = [\r\n            Vector(0,0),\r\n            Vector(PIXEL_DIM_X-1, 0),\r\n            Vector(PIXEL_DIM_X-1, PIXEL_DIM_Y-1),\r\n            Vector(0, PIXEL_DIM_Y-1)\r\n        ]\r\n\r\n        self.characterColors = [RED, BLUE, GREEN, YELLOW]\r\n\r\n        self.axisVectors = [Vector(0,0),Vector(0,0),Vector(0,0),Vector(0,0)]\r\n\r\n        self.characterSpeed = 18\r\n\r\n    def update(self, dt):\r\n        Game.update(self, dt)\r\n\r\n        for player in range(self.playerCount):\r\n            playerPos = self.characterPositions[player] + ( self.axisVectors[player] * dt ) * self.characterSpeed\r\n            self.characterPositions[player] = Vector(playerPos.x % PIXEL_DIM_X, playerPos.y % PIXEL_DIM_Y)\r\n\r\n    def draw(self, rgb):\r\n        Game.draw(self, rgb)\r\n\r\n        for i in range(self.playerCount):\r\n            rgb.setPixel(self.characterPositions[i], self.characterColors[i])\r\n\r\n    def onAxisChanged(self, player, xAxis, yAxis, previousXAxis, previousYAxis):\r\n        Game.onAxisChanged(self, player, xAxis, yAxis, previousXAxis, previousYAxis)\r\n\r\n        self.axisVectors[player] = Vector(xAxis, yAxis)\r\n\r\n    def onButtonChanged(self, player, aButton, bButton, previousAButton, previousBButton):\r\n        Game.onButtonChanged(self, player, aButton, bButton, previousAButton, previousBButton)\r\n\r\n        print \"onButtonChanged\"\r\n\r\nif __name__ == \"__main__\":\r\n    print \"Starting game\"\r\n    sample = SampleGame(\"127.0.0.1\")\r\n    sample.run()\r\n    print \"Stopping game\"\r\n```\r\n","google":"UA-3329852-13","note":"Don't delete this file! It's used internally to help with page regeneration."}